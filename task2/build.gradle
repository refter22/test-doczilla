plugins {
    id 'java'
    id 'application'
}

group = 'student'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

dependencies {
    implementation 'io.javalin:javalin:5.6.3'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.3'

    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'io.javalin:javalin-testtools:5.6.3'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

test {
    useJUnitPlatform()
    jvmArgs = [
        '-XX:+EnableDynamicAgentLoading'
    ]
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
        showStandardStreams = true
        showExceptions = true
        showCauses = true
        showStackTraces = true
    }
}

application {
    mainClass = 'student.Application'
}

tasks.register('fatJar', Jar) {
    manifest {
        attributes 'Main-Class': 'student.Application'
    }
    archiveClassifier = 'fat'
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}